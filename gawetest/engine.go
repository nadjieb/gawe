// Code generated by mockery v2.0.0. DO NOT EDIT.

package gawetest

import (
	context "context"

	gawe "github.com/nadjieb/gawe"
	mock "github.com/stretchr/testify/mock"
)

// Engine is an autogenerated mock type for the Engineable type
type Engine struct {
	mock.Mock
}

// Enqueue provides a mock function with given fields: ctx, job
func (_m *Engine) Enqueue(ctx context.Context, job gawe.Job) error {
	ret := _m.Called(ctx, job)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, gawe.Job) error); ok {
		r0 = rf(ctx, job)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Start provides a mock function with given fields:
func (_m *Engine) Start() {
	_m.Called()
}

// Stop provides a mock function with given fields:
func (_m *Engine) Stop() {
	_m.Called()
}
