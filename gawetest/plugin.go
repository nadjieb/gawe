// Code generated by mockery v2.0.0. DO NOT EDIT.

package gawetest

import (
	context "context"

	gawe "github.com/nadjieb/gawe"
	mock "github.com/stretchr/testify/mock"
)

// Plugin is an autogenerated mock type for the Plugin type
type Plugin struct {
	mock.Mock
}

// OnJobEnd provides a mock function with given fields: ctx, job
func (_m *Plugin) OnJobEnd(ctx context.Context, job gawe.IdentifiableJob) {
	_m.Called(ctx, job)
}

// OnJobError provides a mock function with given fields: ctx, job, err
func (_m *Plugin) OnJobError(ctx context.Context, job gawe.IdentifiableJob, err error) context.Context {
	ret := _m.Called(ctx, job, err)

	var r0 context.Context
	if rf, ok := ret.Get(0).(func(context.Context, gawe.IdentifiableJob, error) context.Context); ok {
		r0 = rf(ctx, job, err)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(context.Context)
		}
	}

	return r0
}

// OnJobStart provides a mock function with given fields: ctx, job
func (_m *Plugin) OnJobStart(ctx context.Context, job gawe.IdentifiableJob) context.Context {
	ret := _m.Called(ctx, job)

	var r0 context.Context
	if rf, ok := ret.Get(0).(func(context.Context, gawe.IdentifiableJob) context.Context); ok {
		r0 = rf(ctx, job)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(context.Context)
		}
	}

	return r0
}
